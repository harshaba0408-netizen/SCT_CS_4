import tkinter as tk
from datetime import datetime
import pathlib

LOG_PATH = pathlib.Path("typing_log.txt")

def log_key(event):
    """Called whenever a key is pressed while the window is focused."""
    
    timestamp = datetime.now().isoformat(sep=' ', timespec='seconds')
    char = event.char if event.char else ''
    line = f"{timestamp}\tkeysym={event.keysym}\tchar={repr(char)}\n"
    LOG_PATH.open("a", encoding="utf-8").write(line)
    
    listbox.insert(tk.END, f"{timestamp} â€” {event.keysym} {char}")

def save_text():
    """Save whole textbox content to a separate file (user-driven)."""
    content = text.get("1.0", tk.END)
    out = pathlib.Path("typed_text.txt")
    out.write_text(content, encoding="utf-8")
    status_var.set(f"Saved typed_text.txt ({len(content)} chars)")

def clear_log():
    if LOG_PATH.exists():
        LOG_PATH.unlink()
    listbox.delete(0, tk.END)
    status_var.set("Log cleared")

def on_close():
    root.destroy()

root = tk.Tk()
root.title("Consenting Typing Recorder")

frame = tk.Frame(root, padx=8, pady=8)
frame.pack(fill=tk.BOTH, expand=True)

tk.Label(frame, text="Type here (window must be focused). Key events will be appended to typing_log.txt").pack(anchor="w")
text = tk.Text(frame, height=8, wrap='word')
text.pack(fill=tk.BOTH, expand=False, pady=(4,8))

btn_frame = tk.Frame(frame)
btn_frame.pack(fill=tk.X, pady=(0,8))
save_btn = tk.Button(btn_frame, text="Save typed text to typed_text.txt", command=save_text)
save_btn.pack(side=tk.LEFT)
clear_btn = tk.Button(btn_frame, text="Clear log file", command=clear_log)
clear_btn.pack(side=tk.LEFT, padx=(8,0))

tk.Label(frame, text="Recent key events:").pack(anchor="w")
listbox = tk.Listbox(frame, height=10)
listbox.pack(fill=tk.BOTH, expand=True)

status_var = tk.StringVar(value=f"Logging to: {LOG_PATH.resolve()}")
status = tk.Label(root, textvariable=status_var, anchor='w')
status.pack(fill=tk.X, side=tk.BOTTOM)


root.bind_all("<Key>", log_key)

root.protocol("WM_DELETE_WINDOW", on_close)
root.mainloop()